// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopping_Store_API.DBContext;

#nullable disable

namespace ShoppingStoreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231228041050_init-shopstore")]
    partial class initshopstore
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("admin");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(2916));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Dell",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3143),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Latitude 7320",
                            PictureUrl = "/images/products/product-01.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Laptop",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Dell",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3147),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Latitude 7330",
                            PictureUrl = "/images/products/product-02.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Laptop",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Dell",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3149),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Inspiron 6430",
                            PictureUrl = "/images/products/product-03.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Laptop",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Dell",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3151),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Inspiron 6530",
                            PictureUrl = "/images/products/product-04.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Laptop",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Apple",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3152),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Ipad M1 12.9",
                            PictureUrl = "/images/products/product-05.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Ipad",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Apple",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3155),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Ipad M1 12.9",
                            PictureUrl = "/images/products/product-06.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Ipad",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Dell",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3158),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Screen 27inch",
                            PictureUrl = "/images/products/product-07.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Dell",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3160),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Screen 27inch",
                            PictureUrl = "/images/products/product-08.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Apple",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3161),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Iphone 14 Pro Max",
                            PictureUrl = "/images/products/product-09.jpeg",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Iphone",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Apple",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3162),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Iphone 14 Pro Max",
                            PictureUrl = "/images/products/product-10.jpeg",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Iphone",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Apple",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3164),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Macbook Air M1",
                            PictureUrl = "/images/products/product-11.jpeg",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Macbook",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Apple",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3165),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Macbook Air M1",
                            PictureUrl = "/images/products/product-12.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Macbook",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 13,
                            Brand = "Gigabyte",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3168),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Mainboard Gigabyte 6330",
                            PictureUrl = "/images/products/product-13.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Mainboard",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 14,
                            Brand = "Gigabyte",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3169),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Mainboard Gigabyte 6330",
                            PictureUrl = "/images/products/product-14.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Mainboard",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 15,
                            Brand = "Corsair",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3171),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Case Corsair",
                            PictureUrl = "/images/products/product-15.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Case",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 16,
                            Brand = "LG",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3172),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG Ultra Gear",
                            PictureUrl = "/images/products/product-16.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 17,
                            Brand = "LG",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3174),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG Ultra Gear",
                            PictureUrl = "/images/products/product-17.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 18,
                            Brand = "Asus",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3176),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "MSI 27",
                            PictureUrl = "/images/products/product-18.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 19,
                            Brand = "Viewsonic",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3177),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24",
                            PictureUrl = "/images/products/product-19.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 20,
                            Brand = "Acer",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3179),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Acer 27",
                            PictureUrl = "/images/products/product-20.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 21,
                            Brand = "Asus",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3180),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 27 Freesync",
                            PictureUrl = "/images/products/product-21.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 22,
                            Brand = "Asus",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3181),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 24 Freesync",
                            PictureUrl = "/images/products/product-22.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 23,
                            Brand = "Viewsonic",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3183),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24 Freesync",
                            PictureUrl = "/images/products/product-23.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 24,
                            Brand = "Viewsonic",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3185),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24 Freesync 75Hz",
                            PictureUrl = "/images/products/product-24.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 25,
                            Brand = "Asus",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3186),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus TUF Gaming 24",
                            PictureUrl = "/images/products/product-25.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 26,
                            Brand = "Gigabyte",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3187),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Gigabyte 24",
                            PictureUrl = "/images/products/product-26.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 27,
                            Brand = "Asus",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3189),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus GM27",
                            PictureUrl = "/images/products/product-27.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 28,
                            Brand = "Acer",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3190),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Acer 75hz 27",
                            PictureUrl = "/images/products/product-28.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 29,
                            Brand = "LG",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3192),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG 75hz 27",
                            PictureUrl = "/images/products/product-29.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 30,
                            Brand = "Asus",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 12, 28, 11, 10, 50, 352, DateTimeKind.Local).AddTicks(3193),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 100hz 27",
                            PictureUrl = "/images/products/product-30.png",
                            Price = 20000L,
                            QuantityInStock = 100,
                            Type = "Screen",
                            UpdatedBy = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
