// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopping_Store_API.DBContext;

#nullable disable

namespace ShoppingStoreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240205145149_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "44bc1c18-51a6-46b0-8e20-0df40a2ae0b9",
                            ConcurrencyStamp = "a7bee7c8-748b-4e11-9f65-e8df283761af",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "4d267d01-3ce5-44d4-bf99-a3fd2172ba17",
                            ConcurrencyStamp = "02d1fe54-d386-412a-badf-6e35a963d3bf",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Permission",
                            ClaimValue = "CanManageUsers",
                            RoleId = "44bc1c18-51a6-46b0-8e20-0df40a2ae0b9"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "Permission",
                            ClaimValue = "CanManageProducts",
                            RoleId = "44bc1c18-51a6-46b0-8e20-0df40a2ae0b9"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "Permission",
                            ClaimValue = "CanViewProducts",
                            RoleId = "4d267d01-3ce5-44d4-bf99-a3fd2172ba17"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Country",
                            ClaimValue = "VN",
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "Country",
                            ClaimValue = "VN",
                            UserId = "94a12a30-1a9b-48ad-950d-29f80865003d"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "Country",
                            ClaimValue = "USA",
                            UserId = "f222bfbf-86bf-4b65-9958-bc818ba5f822"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            RoleId = "44bc1c18-51a6-46b0-8e20-0df40a2ae0b9"
                        },
                        new
                        {
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            RoleId = "4d267d01-3ce5-44d4-bf99-a3fd2172ba17"
                        },
                        new
                        {
                            UserId = "94a12a30-1a9b-48ad-950d-29f80865003d",
                            RoleId = "4d267d01-3ce5-44d4-bf99-a3fd2172ba17"
                        },
                        new
                        {
                            UserId = "f222bfbf-86bf-4b65-9958-bc818ba5f822",
                            RoleId = "4d267d01-3ce5-44d4-bf99-a3fd2172ba17"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressName = "172/26 Ly Thai To, Q.3",
                            City = "HCM",
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(2937),
                            IsDeleted = false,
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            isDefault = true
                        },
                        new
                        {
                            Id = 2,
                            AddressName = "175 Duong so 1, Go Vap",
                            City = "HCM",
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(2941),
                            IsDeleted = false,
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            isDefault = false
                        },
                        new
                        {
                            Id = 3,
                            AddressName = "175 Duong so 10, Binh Thanh",
                            City = "HCM",
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(2942),
                            IsDeleted = false,
                            UserId = "94a12a30-1a9b-48ad-950d-29f80865003d",
                            isDefault = true
                        },
                        new
                        {
                            Id = 4,
                            AddressName = "11 Duong so 1, Binh Thanh",
                            City = "HCM",
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(2944),
                            IsDeleted = false,
                            UserId = "f222bfbf-86bf-4b65-9958-bc818ba5f822",
                            isDefault = true
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bcd859fe-7282-46f7-8408-d7bc3b2ac480",
                            EmailConfirmed = false,
                            FullName = "kiethuynh",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d000f7f8-e8dd-4307-a255-f0f4752ce391",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "94a12a30-1a9b-48ad-950d-29f80865003d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "26532239-4aea-4c63-8d72-3ce21ec4b422",
                            EmailConfirmed = false,
                            FullName = "mangoc",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7037ef73-8e81-433a-a160-fcb1fed0236c",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "f222bfbf-86bf-4b65-9958-bc818ba5f822",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0f675472-f9d3-46bb-8611-73f244e9abe2",
                            EmailConfirmed = false,
                            FullName = "auduongphong",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "abb29ab2-2cc0-4da6-bdef-6821542148a3",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9986),
                            IsDeleted = false,
                            Name = "Dell"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9987),
                            IsDeleted = false,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9988),
                            IsDeleted = false,
                            Name = "Gigabyte"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9989),
                            IsDeleted = false,
                            Name = "Corsair"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9990),
                            IsDeleted = false,
                            Name = "LG"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9991),
                            IsDeleted = false,
                            Name = "Asus"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9992),
                            IsDeleted = false,
                            Name = "Viewsonic"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9993),
                            IsDeleted = false,
                            Name = "Acer"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(122),
                            IsDeleted = false,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(124),
                            IsDeleted = false,
                            Name = "Ipad"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(125),
                            IsDeleted = false,
                            Name = "Screen"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(126),
                            IsDeleted = false,
                            Name = "Iphone"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(127),
                            IsDeleted = false,
                            Name = "Macbook"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(128),
                            IsDeleted = false,
                            Name = "Mainboard"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(128),
                            IsDeleted = false,
                            Name = "Case"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<long>("Total")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(4279),
                            IsDeleted = false,
                            OrderStatus = 0,
                            Total = 100000L,
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(4283),
                            IsDeleted = false,
                            OrderStatus = 0,
                            Total = 110000L,
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(4284),
                            IsDeleted = false,
                            OrderStatus = 0,
                            Total = 120000L,
                            UserId = "94a12a30-1a9b-48ad-950d-29f80865003d"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(4285),
                            IsDeleted = false,
                            OrderStatus = 0,
                            Total = 130000L,
                            UserId = "f222bfbf-86bf-4b65-9958-bc818ba5f822"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(6714),
                            IsDeleted = false,
                            ItemId = 1,
                            OrderID = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(6719),
                            IsDeleted = false,
                            ItemId = 2,
                            OrderID = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(6720),
                            IsDeleted = false,
                            ItemId = 3,
                            OrderID = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(6721),
                            IsDeleted = false,
                            ItemId = 3,
                            OrderID = 2,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(6722),
                            IsDeleted = false,
                            ItemId = 3,
                            OrderID = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(6723),
                            IsDeleted = false,
                            ItemId = 3,
                            OrderID = 4,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9769),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Latitude 7320",
                            PictureUrl = "/images/products/product-01.png",
                            Price = 1000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 2,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9776),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Latitude 7330",
                            PictureUrl = "/images/products/product-02.png",
                            Price = 2000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 3,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9778),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Inspiron 6430",
                            PictureUrl = "/images/products/product-03.png",
                            Price = 3000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 4,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9779),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Inspiron 6530",
                            PictureUrl = "/images/products/product-04.png",
                            Price = 4000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 5,
                            BrandID = 2,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9782),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Ipad M1 12.9",
                            PictureUrl = "/images/products/product-05.png",
                            Price = 5000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 6,
                            BrandID = 2,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9783),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Ipad M1 12.9",
                            PictureUrl = "/images/products/product-06.png",
                            Price = 6000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 7,
                            BrandID = 1,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9784),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Screen 27inch",
                            PictureUrl = "/images/products/product-07.png",
                            Price = 7000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 8,
                            BrandID = 1,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9785),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Screen 27inch",
                            PictureUrl = "/images/products/product-08.png",
                            Price = 8000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 9,
                            BrandID = 2,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9826),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Iphone 14 Pro Max",
                            PictureUrl = "/images/products/product-09.jpeg",
                            Price = 9000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 10,
                            BrandID = 2,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9828),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Iphone 14 Pro Max",
                            PictureUrl = "/images/products/product-10.jpeg",
                            Price = 10000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 11,
                            BrandID = 2,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9829),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Macbook Air M1",
                            PictureUrl = "/images/products/product-11.jpeg",
                            Price = 11000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 12,
                            BrandID = 2,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9831),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Macbook Air M1",
                            PictureUrl = "/images/products/product-12.png",
                            Price = 12000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 13,
                            BrandID = 3,
                            CategoryID = 6,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9832),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Mainboard Gigabyte 6330",
                            PictureUrl = "/images/products/product-13.png",
                            Price = 13000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 14,
                            BrandID = 3,
                            CategoryID = 6,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9833),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Mainboard Gigabyte 6330",
                            PictureUrl = "/images/products/product-14.png",
                            Price = 14000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 15,
                            BrandID = 4,
                            CategoryID = 7,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9834),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Case Corsair",
                            PictureUrl = "/images/products/product-15.png",
                            Price = 15000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 16,
                            BrandID = 5,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9836),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG Ultra Gear",
                            PictureUrl = "/images/products/product-16.png",
                            Price = 16000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 17,
                            BrandID = 5,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9837),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG Ultra Gear",
                            PictureUrl = "/images/products/product-17.png",
                            Price = 17000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 18,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9838),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "MSI 27",
                            PictureUrl = "/images/products/product-18.png",
                            Price = 18000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 19,
                            BrandID = 7,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9839),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24",
                            PictureUrl = "/images/products/product-19.png",
                            Price = 19000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 20,
                            BrandID = 8,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9840),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Acer 27",
                            PictureUrl = "/images/products/product-20.png",
                            Price = 10000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 21,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9842),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 27 Freesync",
                            PictureUrl = "/images/products/product-21.png",
                            Price = 21000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 22,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9843),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 24 Freesync",
                            PictureUrl = "/images/products/product-22.png",
                            Price = 22000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 23,
                            BrandID = 7,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9844),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24 Freesync",
                            PictureUrl = "/images/products/product-23.png",
                            Price = 23000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 24,
                            BrandID = 7,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9845),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24 Freesync 75Hz",
                            PictureUrl = "/images/products/product-24.png",
                            Price = 24000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 25,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9848),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus TUF Gaming 24",
                            PictureUrl = "/images/products/product-25.png",
                            Price = 25000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 26,
                            BrandID = 3,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9849),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Gigabyte 24",
                            PictureUrl = "/images/products/product-26.png",
                            Price = 26000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 27,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9851),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus GM27",
                            PictureUrl = "/images/products/product-27.png",
                            Price = 27000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 28,
                            BrandID = 8,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9852),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Acer 75hz 27",
                            PictureUrl = "/images/products/product-28.png",
                            Price = 28000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 29,
                            BrandID = 5,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9853),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG 75hz 27",
                            PictureUrl = "/images/products/product-29.png",
                            Price = 29000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 30,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(9855),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 100hz 27",
                            PictureUrl = "/images/products/product-30.png",
                            Price = 30000L,
                            QuantityInStock = 100
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("admin");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(3925));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ShoppingCart");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(4216),
                            IsDeleted = false,
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(4221),
                            IsDeleted = false,
                            UserId = "94a12a30-1a9b-48ad-950d-29f80865003d"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(4223),
                            IsDeleted = false,
                            UserId = "f222bfbf-86bf-4b65-9958-bc818ba5f822"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ShoppingCartID");

                    b.ToTable("ShoppingCartItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(6783),
                            IsDeleted = false,
                            ItemId = 1,
                            Quantity = 3,
                            ShoppingCartID = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(6788),
                            IsDeleted = false,
                            ItemId = 2,
                            Quantity = 3,
                            ShoppingCartID = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(6789),
                            IsDeleted = false,
                            ItemId = 3,
                            Quantity = 3,
                            ShoppingCartID = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(6790),
                            IsDeleted = false,
                            ItemId = 1,
                            Quantity = 3,
                            ShoppingCartID = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(6791),
                            IsDeleted = false,
                            ItemId = 2,
                            Quantity = 3,
                            ShoppingCartID = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(6792),
                            IsDeleted = false,
                            ItemId = 3,
                            Quantity = 3,
                            ShoppingCartID = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(6792),
                            IsDeleted = false,
                            ItemId = 1,
                            Quantity = 3,
                            ShoppingCartID = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(6793),
                            IsDeleted = false,
                            ItemId = 2,
                            Quantity = 3,
                            ShoppingCartID = 3
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 157, DateTimeKind.Local).AddTicks(6794),
                            IsDeleted = false,
                            ItemId = 3,
                            Quantity = 3,
                            ShoppingCartID = 3
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Token");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(1419),
                            ExpiresAt = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(1424),
                            IPAddress = "192.168.0.1",
                            IsDeleted = false,
                            RefreshToken = "",
                            UserAgent = "Chrome/91.0.4472.124",
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(1428),
                            ExpiresAt = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(1429),
                            IPAddress = "192.168.0.2",
                            IsDeleted = false,
                            RefreshToken = "",
                            UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64)",
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(1429),
                            ExpiresAt = new DateTime(2024, 2, 5, 21, 51, 49, 158, DateTimeKind.Local).AddTicks(1430),
                            IPAddress = "192.168.0.3",
                            IsDeleted = false,
                            RefreshToken = "",
                            UserAgent = "Safari/537.36",
                            UserId = "94a12a30-1a9b-48ad-950d-29f80865003d"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Address", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Order", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.OrderItem", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.Product", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCart", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", "User")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("Shopping_Store_API.Entities.ERP.ShoppingCart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCartItem", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.Product", "Item")
                        .WithMany("ProductShoppingCartItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.ShoppingCart", "ShoppingCart")
                        .WithMany("ShoppingCartItems")
                        .HasForeignKey("ShoppingCartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Token", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.AppUser", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("ShoppingCart")
                        .IsRequired();

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("ProductShoppingCartItems");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
