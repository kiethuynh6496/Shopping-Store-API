// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopping_Store_API.DBContext;

#nullable disable

namespace ShoppingStoreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            AccessFailedCount = 0,
                            Address = "TP Ho Chi Minh",
                            ConcurrencyStamp = "8330cccd-151f-4c90-b6c7-0a5704bf7a46",
                            EmailConfirmed = false,
                            FullName = "kiethuynh",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9766692f-566d-4be2-9d92-410ce086947f",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "94a12a30-1a9b-48ad-950d-29f80865003d",
                            AccessFailedCount = 0,
                            Address = "TP Ho Chi Minh",
                            ConcurrencyStamp = "48bbe0e9-0e72-426a-bba2-9e0dc681ae9a",
                            EmailConfirmed = false,
                            FullName = "mangoc",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4e67a456-cab1-4e25-aabc-5bf67981fb9a",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "f222bfbf-86bf-4b65-9958-bc818ba5f822",
                            AccessFailedCount = 0,
                            Address = "TP Ho Chi Minh",
                            ConcurrencyStamp = "6980319a-ca3e-451c-adc5-47309660ce17",
                            EmailConfirmed = false,
                            FullName = "auduongphong",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2574a62d-2838-4cc8-af88-4978f4f1e0db",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("admin");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(2335));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(2481),
                            IsDeleted = false,
                            Name = "Dell",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(2483),
                            IsDeleted = false,
                            Name = "Apple",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(2485),
                            IsDeleted = false,
                            Name = "Gigabyte",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(2486),
                            IsDeleted = false,
                            Name = "Corsair",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(2487),
                            IsDeleted = false,
                            Name = "LG",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(2488),
                            IsDeleted = false,
                            Name = "Asus",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(2489),
                            IsDeleted = false,
                            Name = "Viewsonic",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(2490),
                            IsDeleted = false,
                            Name = "Acer",
                            UpdatedBy = "admin"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("admin");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(3155));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(3294),
                            IsDeleted = false,
                            Name = "Laptop",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(3296),
                            IsDeleted = false,
                            Name = "Ipad",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(3298),
                            IsDeleted = false,
                            Name = "Screen",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(3342),
                            IsDeleted = false,
                            Name = "Iphone",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(3343),
                            IsDeleted = false,
                            Name = "Macbook",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(3344),
                            IsDeleted = false,
                            Name = "Mainboard",
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(3345),
                            IsDeleted = false,
                            Name = "Case",
                            UpdatedBy = "admin"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("admin");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(8678));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1711),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Latitude 7320",
                            PictureUrl = "/images/products/product-01.png",
                            Price = 1000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 2,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1716),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Latitude 7330",
                            PictureUrl = "/images/products/product-02.png",
                            Price = 2000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 3,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1717),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Inspiron 6430",
                            PictureUrl = "/images/products/product-03.png",
                            Price = 3000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 4,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1718),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Inspiron 6530",
                            PictureUrl = "/images/products/product-04.png",
                            Price = 4000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 5,
                            BrandID = 2,
                            CategoryID = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1720),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Ipad M1 12.9",
                            PictureUrl = "/images/products/product-05.png",
                            Price = 5000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 6,
                            BrandID = 2,
                            CategoryID = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1721),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Ipad M1 12.9",
                            PictureUrl = "/images/products/product-06.png",
                            Price = 6000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 7,
                            BrandID = 1,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1723),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Screen 27inch",
                            PictureUrl = "/images/products/product-07.png",
                            Price = 7000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 8,
                            BrandID = 1,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1725),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Screen 27inch",
                            PictureUrl = "/images/products/product-08.png",
                            Price = 8000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 9,
                            BrandID = 2,
                            CategoryID = 4,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1726),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Iphone 14 Pro Max",
                            PictureUrl = "/images/products/product-09.jpeg",
                            Price = 9000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 10,
                            BrandID = 2,
                            CategoryID = 4,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1727),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Iphone 14 Pro Max",
                            PictureUrl = "/images/products/product-10.jpeg",
                            Price = 10000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 11,
                            BrandID = 2,
                            CategoryID = 5,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1729),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Macbook Air M1",
                            PictureUrl = "/images/products/product-11.jpeg",
                            Price = 11000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 12,
                            BrandID = 2,
                            CategoryID = 5,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1730),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Macbook Air M1",
                            PictureUrl = "/images/products/product-12.png",
                            Price = 12000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 13,
                            BrandID = 3,
                            CategoryID = 6,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1731),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Mainboard Gigabyte 6330",
                            PictureUrl = "/images/products/product-13.png",
                            Price = 13000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 14,
                            BrandID = 3,
                            CategoryID = 6,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1733),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Mainboard Gigabyte 6330",
                            PictureUrl = "/images/products/product-14.png",
                            Price = 14000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 15,
                            BrandID = 4,
                            CategoryID = 7,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1734),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Case Corsair",
                            PictureUrl = "/images/products/product-15.png",
                            Price = 15000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 16,
                            BrandID = 5,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1735),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG Ultra Gear",
                            PictureUrl = "/images/products/product-16.png",
                            Price = 16000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 17,
                            BrandID = 5,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1736),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG Ultra Gear",
                            PictureUrl = "/images/products/product-17.png",
                            Price = 17000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 18,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1738),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "MSI 27",
                            PictureUrl = "/images/products/product-18.png",
                            Price = 18000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 19,
                            BrandID = 7,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1740),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24",
                            PictureUrl = "/images/products/product-19.png",
                            Price = 19000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 20,
                            BrandID = 8,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1741),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Acer 27",
                            PictureUrl = "/images/products/product-20.png",
                            Price = 10000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 21,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1743),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 27 Freesync",
                            PictureUrl = "/images/products/product-21.png",
                            Price = 21000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 22,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1744),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 24 Freesync",
                            PictureUrl = "/images/products/product-22.png",
                            Price = 22000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 23,
                            BrandID = 7,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1745),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24 Freesync",
                            PictureUrl = "/images/products/product-23.png",
                            Price = 23000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 24,
                            BrandID = 7,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1746),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24 Freesync 75Hz",
                            PictureUrl = "/images/products/product-24.png",
                            Price = 24000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 25,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1748),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus TUF Gaming 24",
                            PictureUrl = "/images/products/product-25.png",
                            Price = 25000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 26,
                            BrandID = 3,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1749),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Gigabyte 24",
                            PictureUrl = "/images/products/product-26.png",
                            Price = 26000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 27,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1750),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus GM27",
                            PictureUrl = "/images/products/product-27.png",
                            Price = 27000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 28,
                            BrandID = 8,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1751),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Acer 75hz 27",
                            PictureUrl = "/images/products/product-28.png",
                            Price = 28000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 29,
                            BrandID = 5,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1753),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG 75hz 27",
                            PictureUrl = "/images/products/product-29.png",
                            Price = 29000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 30,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 777, DateTimeKind.Local).AddTicks(1754),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 100hz 27",
                            PictureUrl = "/images/products/product-30.png",
                            Price = 30000L,
                            QuantityInStock = 100,
                            UpdatedBy = "admin"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("admin");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(4280));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ShoppingCart");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(4469),
                            IsDeleted = false,
                            UpdatedBy = "admin",
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(4472),
                            IsDeleted = false,
                            UpdatedBy = "admin",
                            UserId = "94a12a30-1a9b-48ad-950d-29f80865003d"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(4474),
                            IsDeleted = false,
                            UpdatedBy = "admin",
                            UserId = "f222bfbf-86bf-4b65-9958-bc818ba5f822"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("admin");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(5080));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ShoppingCartID");

                    b.ToTable("ShoppingCartItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(7775),
                            IsDeleted = false,
                            ItemId = 1,
                            Quantity = 3,
                            ShoppingCartID = 1,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(7780),
                            IsDeleted = false,
                            ItemId = 2,
                            Quantity = 3,
                            ShoppingCartID = 1,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(7781),
                            IsDeleted = false,
                            ItemId = 3,
                            Quantity = 3,
                            ShoppingCartID = 1,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(7782),
                            IsDeleted = false,
                            ItemId = 1,
                            Quantity = 3,
                            ShoppingCartID = 2,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(7783),
                            IsDeleted = false,
                            ItemId = 2,
                            Quantity = 3,
                            ShoppingCartID = 2,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(7785),
                            IsDeleted = false,
                            ItemId = 3,
                            Quantity = 3,
                            ShoppingCartID = 2,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(7786),
                            IsDeleted = false,
                            ItemId = 1,
                            Quantity = 3,
                            ShoppingCartID = 3,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(7787),
                            IsDeleted = false,
                            ItemId = 2,
                            Quantity = 3,
                            ShoppingCartID = 3,
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 1, 18, 21, 35, 19, 776, DateTimeKind.Local).AddTicks(7789),
                            IsDeleted = false,
                            ItemId = 3,
                            Quantity = 3,
                            ShoppingCartID = 3,
                            UpdatedBy = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCart", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", "User")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("Shopping_Store_API.Entities.ERP.ShoppingCart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCartItem", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.Product", "Item")
                        .WithMany("ProductShoppingCartItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.ShoppingCart", "ShoppingCart")
                        .WithMany("ShoppingCartItems")
                        .HasForeignKey("ShoppingCartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.AppUser", b =>
                {
                    b.Navigation("ShoppingCart")
                        .IsRequired();
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.Navigation("ProductShoppingCartItems");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
