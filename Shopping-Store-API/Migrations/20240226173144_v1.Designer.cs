// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopping_Store_API.DBContext;

#nullable disable

namespace Shopping_Store_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240226173144_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "44bc1c18-51a6-46b0-8e20-0df40a2ae0b9",
                            ConcurrencyStamp = "944043d2-5bcc-47b4-ad78-4c30eab5aeb6",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "4d267d01-3ce5-44d4-bf99-a3fd2172ba17",
                            ConcurrencyStamp = "e03b7215-3e65-4ef3-b82f-5125179e5665",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Permission",
                            ClaimValue = "CanManageUsers",
                            RoleId = "44bc1c18-51a6-46b0-8e20-0df40a2ae0b9"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "Permission",
                            ClaimValue = "CanManageProducts",
                            RoleId = "44bc1c18-51a6-46b0-8e20-0df40a2ae0b9"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "Permission",
                            ClaimValue = "CanViewProducts",
                            RoleId = "4d267d01-3ce5-44d4-bf99-a3fd2172ba17"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Country",
                            ClaimValue = "VN",
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            RoleId = "44bc1c18-51a6-46b0-8e20-0df40a2ae0b9"
                        },
                        new
                        {
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            RoleId = "4d267d01-3ce5-44d4-bf99-a3fd2172ba17"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressName = "172/26 Ly Thai To, Q.3",
                            City = "HCM",
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(8573),
                            IsDeleted = false,
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            isDefault = true
                        },
                        new
                        {
                            Id = 2,
                            AddressName = "175 Duong so 1, Go Vap",
                            City = "HCM",
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(8578),
                            IsDeleted = false,
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            isDefault = false
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d68dcb5f-2706-4cb5-bb0b-37bf39400420",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8689f580-7e99-4318-9905-3dea326b56e3",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FullName = "admin",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEORqsu30Xu2m4FyF5WRg8ScZ6GZOtWBBeEVNO3Hgfq03k/bjHmUAKOh0SWJRkMjVdA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "adba175a-9a73-4100-bdfb-d0b9cc2c094a",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5419),
                            IsDeleted = false,
                            Name = "Dell"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5422),
                            IsDeleted = false,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5423),
                            IsDeleted = false,
                            Name = "Gigabyte"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5423),
                            IsDeleted = false,
                            Name = "Corsair"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5424),
                            IsDeleted = false,
                            Name = "LG"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5425),
                            IsDeleted = false,
                            Name = "Asus"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5426),
                            IsDeleted = false,
                            Name = "Viewsonic"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5427),
                            IsDeleted = false,
                            Name = "Acer"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5493),
                            IsDeleted = false,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5499),
                            IsDeleted = false,
                            Name = "Ipad"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5500),
                            IsDeleted = false,
                            Name = "Screen"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5501),
                            IsDeleted = false,
                            Name = "Iphone"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5501),
                            IsDeleted = false,
                            Name = "Macbook"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5502),
                            IsDeleted = false,
                            Name = "Mainboard"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5503),
                            IsDeleted = false,
                            Name = "Case"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MomoRequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("PaymentIntenId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Total")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<string>("PublicIdCloudary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5164),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Latitude 7320",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693471/shopee/products/jqyuena1vpsuojaht4vu.png",
                            Price = 1000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 2,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5182),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Latitude 7330",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693471/shopee/products/n28l0eh9rjx2bihtxoy5.jpg",
                            Price = 2000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 3,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5184),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Inspiron 6430",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693472/shopee/products/hpgz7xlaqa52xo7ubjw9.png",
                            Price = 3000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 4,
                            BrandID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5185),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Inspiron 6530",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693472/shopee/products/enebiqezhcup3lgkcstb.png",
                            Price = 4000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 5,
                            BrandID = 2,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5188),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Ipad M1 12.9",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693472/shopee/products/gpomm9nf5w3w4juiooiv.png",
                            Price = 5000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 6,
                            BrandID = 2,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5189),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Ipad M1 12.9",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693472/shopee/products/yysgxkbqiufbui1hb9si.jpg",
                            Price = 6000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 7,
                            BrandID = 1,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5190),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Screen 27inch",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693472/shopee/products/wsb51zjp5mc4wqbfxatp.png",
                            Price = 7000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 8,
                            BrandID = 1,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5192),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Dell Screen 27inch",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693473/shopee/products/teghmyo3k3hdkau9qne7.png",
                            Price = 8000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 9,
                            BrandID = 2,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5193),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Iphone 14 Pro Max",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693473/shopee/products/i39drgkscnglo4qh6tvr.jpg",
                            Price = 9000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 10,
                            BrandID = 2,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5194),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Iphone 14 Pro Max",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693473/shopee/products/iwoww4fcebhsximqr2e7.jpg",
                            Price = 10000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 11,
                            BrandID = 2,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5195),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Macbook Air M1",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693473/shopee/products/bsca35kdtcrrsrahalrb.jpg",
                            Price = 11000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 12,
                            BrandID = 2,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5197),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Macbook Air M1",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693474/shopee/products/eiwqbjg53c1iiyfyuubx.png",
                            Price = 12000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 13,
                            BrandID = 3,
                            CategoryID = 6,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5198),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Mainboard Gigabyte 6330",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693474/shopee/products/vhxrw4q797mox11xllpf.png",
                            Price = 13000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 14,
                            BrandID = 3,
                            CategoryID = 6,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5199),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Mainboard Gigabyte 6330",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693471/shopee/products/jxdj5mfcy47ee0bwfmnp.webp",
                            Price = 14000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 15,
                            BrandID = 4,
                            CategoryID = 7,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5201),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Case Corsair",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693471/shopee/products/iilp2mh1066ifpxiluur.png",
                            Price = 15000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 16,
                            BrandID = 5,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5202),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG Ultra Gear",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693471/shopee/products/x8nbir1cb3vymmubj0qd.webp",
                            Price = 16000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 17,
                            BrandID = 5,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5203),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG Ultra Gear",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693472/shopee/products/kvk93lqt9iyjfnbhf39u.webp",
                            Price = 17000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 18,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5205),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "MSI 27",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693472/shopee/products/k5uu8rmgex2g8nr45ldi.webp",
                            Price = 18000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 19,
                            BrandID = 7,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5206),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693472/shopee/products/v01sbaf9rbkzw8yhtdwv.webp",
                            Price = 19000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 20,
                            BrandID = 8,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5207),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Acer 27",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693473/shopee/products/njtxjkkamuulhb4alvdg.webp",
                            Price = 10000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 21,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5208),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 27 Freesync",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693473/shopee/products/jhxgm22du9zgbe2sw5zc.webp",
                            Price = 21000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 22,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5210),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 24 Freesync",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693474/shopee/products/lrjtodqgvmojr94durpt.webp",
                            Price = 22000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 23,
                            BrandID = 7,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5211),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24 Freesync",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693474/shopee/products/tihrkueyfuawaaob6f0g.webp",
                            Price = 23000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 24,
                            BrandID = 7,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5213),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Viewsonic 24 Freesync 75Hz",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693474/shopee/products/timgmpaw7v0i9gpx0ayv.webp",
                            Price = 24000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 25,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5277),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus TUF Gaming 24",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693474/shopee/products/tmjzsdvpgixl7dedthkm.webp",
                            Price = 25000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 26,
                            BrandID = 3,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5279),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Gigabyte 24",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693474/shopee/products/ncpg1p2grvu9mbj66gh4.webp",
                            Price = 26000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 27,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5280),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus GM27",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693476/shopee/products/qmauhpz1jych8vf6g2hb.webp",
                            Price = 27000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 28,
                            BrandID = 8,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5281),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Acer 75hz 27",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693474/shopee/products/qamr31r8gxd9rfcxkaiw.webp",
                            Price = 28000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 29,
                            BrandID = 5,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5283),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "LG 75hz 27",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693475/shopee/products/gwt4kwqllyybkrwofd1m.webp",
                            Price = 29000L,
                            QuantityInStock = 100
                        },
                        new
                        {
                            Id = 30,
                            BrandID = 6,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 2, 27, 0, 31, 44, 4, DateTimeKind.Local).AddTicks(5284),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsDeleted = false,
                            Name = "Asus 100hz 27",
                            PictureUrl = "https://res.cloudinary.com/donrlyxgv/image/upload/v1708693475/shopee/products/feqpxb8w3aw97cwq3d8v.webp",
                            Price = 30000L,
                            QuantityInStock = 100
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentIntenId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ShoppingCart");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = "d68dcb5f-2706-4cb5-bb0b-37bf39400420"
                        });
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ShoppingCartID");

                    b.ToTable("ShoppingCartItem");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Address", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Order", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.OrderItem", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.Product", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCart", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", "User")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("Shopping_Store_API.Entities.ERP.ShoppingCart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCartItem", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.Product", "Item")
                        .WithMany("ProductShoppingCartItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping_Store_API.Entities.ERP.ShoppingCart", "ShoppingCart")
                        .WithMany("ShoppingCartItems")
                        .HasForeignKey("ShoppingCartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Token", b =>
                {
                    b.HasOne("Shopping_Store_API.Entities.ERP.AppUser", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.AppUser", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("ShoppingCart")
                        .IsRequired();

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("ProductShoppingCartItems");
                });

            modelBuilder.Entity("Shopping_Store_API.Entities.ERP.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
